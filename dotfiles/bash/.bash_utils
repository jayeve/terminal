# colors
RED="\033[0;31m"
BLACK="\033[0;30m"
GREEN="\033[0;32m"
FLASHING_GREEN="\033[5;32m"
YELLOW="\033[0;33m"
BLUE="\033[0;34m"
PINK="\033[0;35m"
CYAN="\033[0;36m"
WHITE="\033[0;37m"
PURPLE="\033[0;38m"
ORANGE="\033[95;38;5;202m"
LITEBLUE="\033[01;36m"
STRIVE="\\033[95;38;5;202mStrive\\033[0m\]"
ROOT_USER="\\033[95;38;5;202mroot\\033[0m\]"

function git_color {
  local git_status="$(git status 2> /dev/null)"

  if [[ ! $git_status =~ "working tree clean" ]]; then
    echo -e $RED
  elif [[ $git_status =~ "Your branch is ahead of" ]]; then
    echo -e $YELLOW
  elif [[ $git_status =~ "nothing to commit" ]]; then
    echo -e $GREEN
  else
    echo -e $COLOR_OCHRE
  fi
}

function git_branch {
  local git_status="$(git status 2> /dev/null)"
  local on_branch="On branch ([^${IFS}]*)"
  local on_commit="HEAD detached at ([^${IFS}]*)"

  if [[ $git_status =~ $on_branch ]]; then
    local branch=${BASH_REMATCH[1]}
    echo "$branch"
  elif [[ $git_status =~ $on_commit ]]; then
    local commit=${BASH_REMATCH[1]}
    echo "$commit"
  fi
}

parse_battery_power() {
  pmset -g batt | awk '/%/' | awk '{print $3}' | cut -d ';' -f 1
}

topcommands() {
  history | awk 'BEGIN {FS="[ \t]+|\\|"} {print $3}' | sort | uniq -c | sort -nr | head -n ${1:-5}
}
